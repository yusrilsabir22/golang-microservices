{
    "swagger": "2.0",
    "info": {
        "description": "API in go using Gin framework",
        "title": "API Service",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Check user data at DB and generate token",
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login User",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.LoginResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/pb.LoginResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Save user data in DB",
                "tags": [
                    "Auth"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "Register User",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.RegisterResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/pb.LoginResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/pb.LoginResponse"
                        }
                    }
                }
            }
        },
        "/auth/validate": {
            "post": {
                "description": "Validate the token and return claims data",
                "tags": [
                    "Auth"
                ],
                "summary": "Get private claims data of the token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authrization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.ValidateResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/pb.ValidateResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "pb.ClaimResponse": {
            "type": "object",
            "properties": {
                "standardClaims": {
                    "$ref": "#/definitions/pb.StandardClaims"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "pb.LoginRequest": {
            "type": "object",
            "properties": {
                "msisdn": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "pb.LoginResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "pb.RegisterRequest": {
            "type": "object",
            "properties": {
                "msisdn": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "pb.RegisterResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "pb.StandardClaims": {
            "type": "object",
            "properties": {
                "audience": {
                    "type": "string"
                },
                "expiresAt": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "issuedAt": {
                    "type": "integer"
                },
                "issuer": {
                    "type": "string"
                },
                "notBefore": {
                    "type": "integer"
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "pb.ValidateResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/pb.ClaimResponse"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    }
}